{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:2000';\nconst AdminService = {\n  loginAdmin: async credentials => {\n    console.log(credentials);\n    try {\n      const response = await axios.post(`${BASE_URL}/login`, credentials);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n};\nexport default AdminService;\n\n// UserService.js\n\n// import axios from 'axios';\n\n// const BASE_URL = 'http://localhost:2000';\n\n// const UserService = {\n\n//     registerUser: (userData) => {\n//         console.log(userData);\n//         axios.post(`${BASE_URL}/register`, userData)\n//             .then((response) => {\n//                 console.log(response);\n//                 return response.data;\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//                 throw new Error(error);\n//             });\n//     },\n\n//     loginUser: (credentials) => {\n//         console.log(credentials);\n//         axios.post(`${BASE_URL}/login`, credentials)\n//             .then((response) => {\n//                 console.log(response);\n//                 return response.data;\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//                 throw new Error(error);\n//             });\n//     },\n\n//     updateUserProfile: async (updatedData, token) => {\n//         console.log(updatedData);\n//         axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n//             headers: { authorization: `Bearer ${token}` }\n//         })\n//             .then((response) => {\n//                 console.log(response);\n//                 return response.data;\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//                 throw new Error(error);\n//             });\n//     }\n// };\n\n// export default UserService","map":{"version":3,"names":["axios","BASE_URL","AdminService","loginAdmin","credentials","console","log","response","post","data","error","Error"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/services/AdminService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:2000';\r\n\r\nconst AdminService = {\r\n\r\n    \r\n    loginAdmin: async (credentials) => {\r\n        console.log(credentials);\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n            console.log(response);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n    },\r\n\r\n    \r\n};\r\n\r\nexport default AdminService;\r\n\r\n\r\n// UserService.js\r\n\r\n// import axios from 'axios';\r\n\r\n// const BASE_URL = 'http://localhost:2000';\r\n\r\n// const UserService = {\r\n\r\n//     registerUser: (userData) => {\r\n//         console.log(userData);\r\n//         axios.post(`${BASE_URL}/register`, userData)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 return response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//                 throw new Error(error);\r\n//             });\r\n//     },\r\n\r\n//     loginUser: (credentials) => {\r\n//         console.log(credentials);\r\n//         axios.post(`${BASE_URL}/login`, credentials)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 return response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//                 throw new Error(error);\r\n//             });\r\n//     },\r\n\r\n//     updateUserProfile: async (updatedData, token) => {\r\n//         console.log(updatedData);\r\n//         axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\r\n//             headers: { authorization: `Bearer ${token}` }\r\n//         })\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 return response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//                 throw new Error(error);\r\n//             });\r\n//     }\r\n// };\r\n\r\n// export default UserService"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,YAAY,GAAG;EAGjBC,UAAU,EAAE,MAAOC,WAAW,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxB,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,GAAEP,QAAS,QAAO,EAAEG,WAAW,CAAC;MACnEC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClB,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;IAC1B;EACJ;AAGJ,CAAC;AAED,eAAeR,YAAY;;AAG3B;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
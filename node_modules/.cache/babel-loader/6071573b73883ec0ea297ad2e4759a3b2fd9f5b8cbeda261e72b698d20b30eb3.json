{"ast":null,"code":"var _s = $RefreshSig$();\n// UpdateProfile.js \n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userUpdateProfile } from \"../../redux/UserSlice\";\nimport UserService from \"../../services/UserService\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  console.log('UpdateProfile');\n  const dispatch = useDispatch();\n  const userData = useSelector(state => state.user.loggedInUser);\n  const token = useSelector(store => store.user.jwtToken);\n  console.log(userData);\n  const [formData, setFormData] = useState(userData);\n  const handleChange = evt => {\n    console.log(evt.target);\n    console.log(formData);\n    setFormData({\n      ...formData,\n      [evt.target.name]: evt.target.value\n    });\n  };\n  const handleSubmit = async evt => {\n    console.log(formData);\n    evt.preventDefault();\n    try {\n      const user = await UserService.updateUserProfile(formData, token);\n      console.log(user);\n      dispatch(userUpdateProfile(user));\n    } catch (error) {\n      console.log(error);\n      if (error.code === 'ERR_BAD_REQUEST') alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(UpdateProfile, \"bvc3hrsfnwMwVGnIMO5t5UF+EqU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["useState","useDispatch","useSelector","userUpdateProfile","UserService","Fragment","_Fragment","jsxDEV","_jsxDEV","UpdateProfile","_s","console","log","dispatch","userData","state","user","loggedInUser","token","store","jwtToken","formData","setFormData","handleChange","evt","target","name","value","handleSubmit","preventDefault","updateUserProfile","error","code","alert","message","_c","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/user/UpdateProfile.js"],"sourcesContent":["// UpdateProfile.js \n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userUpdateProfile } from \"../../redux/UserSlice\";\nimport UserService from \"../../services/UserService\";\n\nconst UpdateProfile = () => {\n    console.log('UpdateProfile');\n    const dispatch = useDispatch();\n    const userData = useSelector((state) => state.user.loggedInUser);\n    const token = useSelector(store => store.user.jwtToken);\n    console.log(userData);\n    const [formData, setFormData] = useState(userData);\n\n    const handleChange = (evt) => {\n        console.log(evt.target);\n        console.log(formData);\n        setFormData({\n            ...formData,\n            [evt.target.name]: evt.target.value\n        });\n    };\n\n    const handleSubmit = async (evt) => {\n        console.log(formData);\n        evt.preventDefault();\n        try {\n            const user = await UserService.updateUserProfile(formData, token);\n            console.log(user);\n            dispatch(userUpdateProfile(user));\n        }\n        catch (error) {\n            console.log(error);\n            if (error.code === 'ERR_BAD_REQUEST')\n                alert(error.message);\n        }\n    };\n\n    return (\n        <>\n            {/* <h1>Update Your Profile</h1>\n            <form onSubmit={handleSubmit}>\n                <label>First Name:</label>\n                <input type=\"text\" name=\"firstName\" value={formData.firstName}\n                    onChange={handleChange} autoFocus required />\n                <br />\n                <label>Last Name:</label>\n                <input type=\"text\" name=\"lastName\" value={formData.lastName}\n                    onChange={handleChange} required />\n                <br />\n                <label>Phone:</label>\n                <input type=\"number\" name=\"phone\" value={formData.phone}\n                    onChange={handleChange} required />\n                <br />\n                <label>Email:</label>\n                <input type=\"email\" name=\"email\" value={formData.email}\n                    onChange={handleChange} required />\n                <br />\n                <label>Avatar:</label>\n                <input type=\"text\" name=\"avatar\" value={formData.avatar}\n                    onChange={handleChange} />\n                <br />\n                <button type=\"submit\">Update Your Profile</button>\n            </form> */}\n\n\n\n            \n        </>\n    );\n};\n\nexport default UpdateProfile;\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC;EAChE,MAAMC,KAAK,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACH,IAAI,CAACI,QAAQ,CAAC;EACvDT,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;EACrB,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACc,QAAQ,CAAC;EAElD,MAAMS,YAAY,GAAIC,GAAG,IAAK;IAC1Bb,OAAO,CAACC,GAAG,CAACY,GAAG,CAACC,MAAM,CAAC;IACvBd,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;IACrBC,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACG,GAAG,CAACC,MAAM,CAACC,IAAI,GAAGF,GAAG,CAACC,MAAM,CAACE;IAClC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,GAAG,IAAK;IAChCb,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;IACrBG,GAAG,CAACK,cAAc,CAAC,CAAC;IACpB,IAAI;MACA,MAAMb,IAAI,GAAG,MAAMZ,WAAW,CAAC0B,iBAAiB,CAACT,QAAQ,EAAEH,KAAK,CAAC;MACjEP,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjBH,QAAQ,CAACV,iBAAiB,CAACa,IAAI,CAAC,CAAC;IACrC,CAAC,CACD,OAAOe,KAAK,EAAE;MACVpB,OAAO,CAACC,GAAG,CAACmB,KAAK,CAAC;MAClB,IAAIA,KAAK,CAACC,IAAI,KAAK,iBAAiB,EAChCC,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B;EACJ,CAAC;EAED,oBACI1B,OAAA,CAAAF,SAAA,mBA6BE,CAAC;AAEX,CAAC;AAACI,EAAA,CAhEID,aAAa;EAAA,QAEER,WAAW,EACXC,WAAW,EACdA,WAAW;AAAA;AAAAiC,EAAA,GAJvB1B,aAAa;AAkEnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconsole.log('cartSlice');\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    // more methods \n\n    addItem: (state, action) => {\n      state.items.push(action.payload); // Push new item to the items array\n      state.totalQuantity += 1; // Increment total quantity\n    },\n    updateQuantity: (state, action) => {\n      const {\n        id,\n        newQuantity\n      } = action.payload;\n      const item = state.items.find(item => item.id === id);\n      if (item) {\n        item.quantity = newQuantity; // Update quantity of the item\n      }\n    }\n  }\n});\nexport default cartSlice.reducer;\nexport const {\n  cartObj,\n  setAllCart,\n  addItem,\n  updateQuantity\n} = cartSlice.actions;","map":{"version":3,"names":["createSlice","console","log","cartSlice","name","initialState","items","totalQuantity","reducers","addItem","state","action","push","payload","updateQuantity","id","newQuantity","item","find","quantity","reducer","cartObj","setAllCart","actions"],"sources":["C:/Varshini/OrderManagement/Frontend/order-managemnet/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconsole.log('cartSlice');\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState : { \r\n        items: [],\r\n        totalQuantity: 0,\r\n      \r\n    },\r\n    reducers : { // more methods \r\n       \r\n        addItem: (state, action) => {\r\n            state.items.push(action.payload); // Push new item to the items array\r\n            state.totalQuantity += 1; // Increment total quantity\r\n        },\r\n        updateQuantity: (state, action) => {\r\n            const { id, newQuantity } = action.payload;\r\n            const item = state.items.find(item => item.id === id);\r\n            if (item) {\r\n                item.quantity = newQuantity; // Update quantity of the item\r\n            }\r\n        },\r\n      \r\n    }\r\n});\r\nexport default cartSlice.reducer;\r\n\r\nexport const {cartObj,setAllCart,addItem,updateQuantity} = cartSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9CC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;AACxB,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAG;IACXC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EAEnB,CAAC;EACDC,QAAQ,EAAG;IAAE;;IAETC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MAClCH,KAAK,CAACH,aAAa,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC;IACDO,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAEI,EAAE;QAAEC;MAAY,CAAC,GAAGL,MAAM,CAACE,OAAO;MAC1C,MAAMI,IAAI,GAAGP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;MACrD,IAAIE,IAAI,EAAE;QACNA,IAAI,CAACE,QAAQ,GAAGH,WAAW,CAAC,CAAC;MACjC;IACJ;EAEJ;AACJ,CAAC,CAAC;AACF,eAAeb,SAAS,CAACiB,OAAO;AAEhC,OAAO,MAAM;EAACC,OAAO;EAACC,UAAU;EAACb,OAAO;EAACK;AAAc,CAAC,GAAGX,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n\n// const Product=()=> {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data from the URL\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//       .then(response => response.json())\n//       .then(data => setUsers(data))\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []); // Empty dependency array ensures the effect runs only once\n\n//   return (\n//     <div>\n//       {/* Mapping over the users array and rendering a card component for each user */}\n//       {users.map(user => (\n//         <div key={user.id} className=\"card\" style={{ width: '18rem', margin: '1rem' }}>\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">{user.name}</h5>\n//             <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\n//             <p className=\"card-text\">Email: {user.email}</p>\n//             <p className=\"card-text\">Phone: {user.phone}</p>\n//             <a href={`https://${user.website}`} className=\"card-link\">{user.website}</a>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Product;\n\n// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// function Product() {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data from the URL\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//       .then(response => response.json())\n//       .then(data => setUsers(data))\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []); // Empty dependency array ensures the effect runs only once\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {/* Mapping over the users array and rendering a card component for each user */}\n//         {users.map(user => (\n//           <div key={user.id} className=\"col-md-4 mb-4\">\n//             <div className=\"card\" style={{ width: '18rem' }}>\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{user.name}</h5>\n//                 <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\n//                 <p className=\"card-text\">Email: {user.email}</p>\n//                 <p className=\"card-text\">Phone: {user.phone}</p>\n//                 <Link to=\"/cart\" className=\"btn btn-primary\">Add to Cart</Link>\n\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;","map":{"version":3,"names":[],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/user/Product.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// const Product=()=> {\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch data from the URL\r\n//     fetch('https://jsonplaceholder.typicode.com/users')\r\n//       .then(response => response.json())\r\n//       .then(data => setUsers(data))\r\n//       .catch(error => console.error('Error fetching data:', error));\r\n//   }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Mapping over the users array and rendering a card component for each user */}\r\n//       {users.map(user => (\r\n//         <div key={user.id} className=\"card\" style={{ width: '18rem', margin: '1rem' }}>\r\n//           <div className=\"card-body\">\r\n//             <h5 className=\"card-title\">{user.name}</h5>\r\n//             <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\r\n//             <p className=\"card-text\">Email: {user.email}</p>\r\n//             <p className=\"card-text\">Phone: {user.phone}</p>\r\n//             <a href={`https://${user.website}`} className=\"card-link\">{user.website}</a>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// function Product() {\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch data from the URL\r\n//     fetch('https://jsonplaceholder.typicode.com/users')\r\n//       .then(response => response.json())\r\n//       .then(data => setUsers(data))\r\n//       .catch(error => console.error('Error fetching data:', error));\r\n//   }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"row\">\r\n//         {/* Mapping over the users array and rendering a card component for each user */}\r\n//         {users.map(user => (\r\n//           <div key={user.id} className=\"col-md-4 mb-4\">\r\n//             <div className=\"card\" style={{ width: '18rem' }}>\r\n//               <div className=\"card-body\">\r\n//                 <h5 className=\"card-title\">{user.name}</h5>\r\n//                 <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\r\n//                 <p className=\"card-text\">Email: {user.email}</p>\r\n//                 <p className=\"card-text\">Phone: {user.phone}</p>\r\n//                 <Link to=\"/cart\" className=\"btn btn-primary\">Add to Cart</Link>\r\n                \r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\n     \r\n\r\n        "],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
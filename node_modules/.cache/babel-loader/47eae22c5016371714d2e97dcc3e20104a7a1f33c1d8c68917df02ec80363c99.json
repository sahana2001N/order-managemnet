{"ast":null,"code":"var _jsxFileName = \"C:\\\\login\\\\reactjs\\\\ibm-final-demos-may-2024-main\\\\03-ibm-frontend-react\\\\src\\\\components\\\\user\\\\Product.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// const Product=()=> {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data from the URL\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//       .then(response => response.json())\n//       .then(data => setUsers(data))\n//       .catch(error => console.error('Error fetching data:', error));\n//   }, []); // Empty dependency array ensures the effect runs only once\n\n//   return (\n//     <div>\n//       {/* Mapping over the users array and rendering a card component for each user */}\n//       {users.map(user => (\n//         <div key={user.id} className=\"card\" style={{ width: '18rem', margin: '1rem' }}>\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">{user.name}</h5>\n//             <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\n//             <p className=\"card-text\">Email: {user.email}</p>\n//             <p className=\"card-text\">Phone: {user.phone}</p>\n//             <a href={`https://${user.website}`} className=\"card-link\">{user.website}</a>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Product;\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch data from the URL\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setUsers(data)).catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            width: '18rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-subtitle mb-2 text-muted\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Email: \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Phone: \", user.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"btn btn-primary\",\n              children: \"Go somewhere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Product, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Product","_s","users","setUsers","fetch","then","response","json","data","catch","error","console","className","children","map","user","style","width","name","fileName","_jsxFileName","lineNumber","columnNumber","username","email","phone","Link","to","id","_c","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/user/Product.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// const Product=()=> {\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch data from the URL\r\n//     fetch('https://jsonplaceholder.typicode.com/users')\r\n//       .then(response => response.json())\r\n//       .then(data => setUsers(data))\r\n//       .catch(error => console.error('Error fetching data:', error));\r\n//   }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Mapping over the users array and rendering a card component for each user */}\r\n//       {users.map(user => (\r\n//         <div key={user.id} className=\"card\" style={{ width: '18rem', margin: '1rem' }}>\r\n//           <div className=\"card-body\">\r\n//             <h5 className=\"card-title\">{user.name}</h5>\r\n//             <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\r\n//             <p className=\"card-text\">Email: {user.email}</p>\r\n//             <p className=\"card-text\">Phone: {user.phone}</p>\r\n//             <a href={`https://${user.website}`} className=\"card-link\">{user.website}</a>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Product() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the URL\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(data => setUsers(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {/* Mapping over the users array and rendering a card component for each user */}\r\n        {users.map(user => (\r\n          <div key={user.id} className=\"col-md-4 mb-4\">\r\n            <div className=\"card\" style={{ width: '18rem' }}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{user.name}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\r\n                <p className=\"card-text\">Email: {user.email}</p>\r\n                <p className=\"card-text\">Phone: {user.phone}</p>\r\n                <Link to=\"#\" className=\"btn btn-primary\">Go somewhere</Link>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n\r\n     \r\n        "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
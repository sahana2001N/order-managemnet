{"ast":null,"code":"// UserService \nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:2000';\nconst UserService = {\n  registerUser: userData => {\n    return response = axios.post(`${BASE_URL}/register`, userData).then(response => {\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n      // return error;\n      throw new Error(error); //seious error\n    });\n  },\n  loginUser: async credentials => {\n    try {\n      const response = await axios.post(`${BASE_URL}/login`, credentials);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  updateUserProfile: async (updatedData, token) => {\n    console.log(updatedData);\n    try {\n      const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n};\nexport default UserService;\n\n// import axios from 'axios';\n\n// const BASE_URL = 'http://localhost:2000';\n\n// const UserService = {\n//     registerUser: async (userData) => {\n//         try {\n//             const response = await axios.post(`${BASE_URL}/register`, userData);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//            // return error;\n//            throw new Error(error);  //seious error\n//         }\n//     },\n\n//     loginUser: async (credentials) => {\n//         try {\n//             const response = await axios.post(`${BASE_URL}/login`, credentials);\n//             console.log(response);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             throw new Error(error);\n//         }\n//     },\n\n//     updateUserProfile: async (updatedData, token) => {\n//         console.log(updatedData);\n//         try {\n//             const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n//                 headers: { authorization: `Bearer ${token}` }\n//             });\n//             console.log(response.data);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             return error;\n//         }\n//     }\n// };\n\n// export default UserService;","map":{"version":3,"names":["axios","BASE_URL","UserService","registerUser","userData","response","post","then","data","catch","error","console","log","Error","loginUser","credentials","updateUserProfile","updatedData","token","put","_id","headers","authorization"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/services/UserService.js"],"sourcesContent":["// UserService \nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\nconst UserService = {\n    registerUser: (userData)=>{\n        return response =axios.post(`${BASE_URL}/register`, userData)\n            .then(response=>{\n                return response.data;\n\n          })\n        \n         .catch (error =>{\n            console.log(error);\n           // return error;\n           throw new Error(error);  //seious error\n         });\n    },\n    \n\n    loginUser: async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\n            console.log(response);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    updateUserProfile: async (updatedData, token) => {\n        console.log(updatedData);\n        try {\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                headers: { authorization: `Bearer ${token}` }\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n};\n\nexport default UserService;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import axios from 'axios';\n\n// const BASE_URL = 'http://localhost:2000';\n\n// const UserService = {\n//     registerUser: async (userData) => {\n//         try {\n//             const response = await axios.post(`${BASE_URL}/register`, userData);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//            // return error;\n//            throw new Error(error);  //seious error\n//         }\n//     },\n\n//     loginUser: async (credentials) => {\n//         try {\n//             const response = await axios.post(`${BASE_URL}/login`, credentials);\n//             console.log(response);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             throw new Error(error);\n//         }\n//     },\n\n//     updateUserProfile: async (updatedData, token) => {\n//         console.log(updatedData);\n//         try {\n//             const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n//                 headers: { authorization: `Bearer ${token}` }\n//             });\n//             console.log(response.data);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             return error;\n//         }\n//     }\n// };\n\n// export default UserService;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,WAAW,GAAG;EAChBC,YAAY,EAAGC,QAAQ,IAAG;IACtB,OAAOC,QAAQ,GAAEL,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,WAAU,EAAEG,QAAQ,CAAC,CACxDG,IAAI,CAACF,QAAQ,IAAE;MACZ,OAAOA,QAAQ,CAACG,IAAI;IAE1B,CAAC,CAAC,CAEFC,KAAK,CAAEC,KAAK,IAAG;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACnB;MACA,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC,CAAC,CAAE;IAC3B,CAAC,CAAC;EACP,CAAC;EAGDI,SAAS,EAAE,MAAOC,WAAW,IAAK;IAC9B,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAEL,QAAS,QAAO,EAAEc,WAAW,CAAC;MACnEJ,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EACJ,CAAC;EAEDM,iBAAiB,EAAE,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;IAC7CP,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;IACxB,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAML,KAAK,CAACmB,GAAG,CAAE,GAAElB,QAAS,UAASgB,WAAW,CAACG,GAAI,EAAC,EAAEH,WAAW,EAAE;QAClFI,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAChD,CAAC,CAAC;MACFP,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACG,IAAI,CAAC;MAC1B,OAAOH,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAOA,KAAK;IAChB;EACJ;AACJ,CAAC;AAED,eAAeR,WAAW;;AA4B1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
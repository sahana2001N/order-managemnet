{"ast":null,"code":"var _jsxFileName = \"C:\\\\Varshini\\\\OrderManagement\\\\Frontend\\\\order-managemnet\\\\src\\\\components\\\\user\\\\Cart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n\n// function Cart() {\n//   // Get the location object using useLocation hook\n//   const location = useLocation();\n//   const navigate = useNavigate(); // Importing useNavigate hook\n\n//   // Parse the URL parameters to extract user data\n//   const searchParams = new URLSearchParams(location.search);\n//   const name = searchParams.get('name');\n//   const price = searchParams.get('price');\n//   const description = searchParams.get('description');\n\n//   // Function to handle removal of cart\n//   const removeCart = () => {\n//     // Redirect to a new URL without cart parameters\n//     // You can replace '/cart' with any other URL if needed\n//     // e.g., navigate('/')\n//     navigate('/cart');\n//   };\n\n//   // Function to handle payment\n//   const handlePayment = () => {\n//     // Perform payment logic here\n//     alert('Payment completed successfully!');\n//   };\n\n//   return (\n//     <div>\n//       <h2>Cart</h2>\n//       {name ? (\n//         <div>\n//           <p>Name: {name}</p>\n//           <p>price: {price}</p>\n//           <p>description: {description}</p>\n//           <button onClick={removeCart}>Remove Cart</button>\n//           <button onClick={handlePayment}>Proceed to Payment</button>\n//         </div>\n//       ) : (\n//         <p>Your cart is empty!</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Cart;\n\n// CartContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const addToCart = product => {\n    setCart(prevCart => [...prevCart, product]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","addToCart","product","prevCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Cart","$RefreshReg$"],"sources":["C:/Varshini/OrderManagement/Frontend/order-managemnet/src/components/user/Cart.js"],"sourcesContent":["\r\n\r\n// import React from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n// function Cart() {\r\n//   // Get the location object using useLocation hook\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate(); // Importing useNavigate hook\r\n\r\n//   // Parse the URL parameters to extract user data\r\n//   const searchParams = new URLSearchParams(location.search);\r\n//   const name = searchParams.get('name');\r\n//   const price = searchParams.get('price');\r\n//   const description = searchParams.get('description');\r\n\r\n//   // Function to handle removal of cart\r\n//   const removeCart = () => {\r\n//     // Redirect to a new URL without cart parameters\r\n//     // You can replace '/cart' with any other URL if needed\r\n//     // e.g., navigate('/')\r\n//     navigate('/cart');\r\n//   };\r\n\r\n//   // Function to handle payment\r\n//   const handlePayment = () => {\r\n//     // Perform payment logic here\r\n//     alert('Payment completed successfully!');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Cart</h2>\r\n//       {name ? (\r\n//         <div>\r\n//           <p>Name: {name}</p>\r\n//           <p>price: {price}</p>\r\n//           <p>description: {description}</p>\r\n//           <button onClick={removeCart}>Remove Cart</button>\r\n//           <button onClick={handlePayment}>Proceed to Payment</button>\r\n//         </div>\r\n//       ) : (\r\n//         <p>Your cart is empty!</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Cart;\r\n\r\n// CartContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => [...prevCart, product]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Cart\r\n\r\n"],"mappings":";;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOL,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,SAAS,GAAIC,OAAO,IAAK;IAC7BF,OAAO,CAAEG,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,OAAO,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEN,IAAI;MAAEE;IAAU,CAAE;IAAAJ,QAAA,EAC9CA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,GAAA,CAZWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAczB,eAAee,IAAI;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = 'http://localhost:8000/emp/';\nconst EmpService = {\n  // AddEmployee:async(empData)=>{\n  //    try{\n  //      const response=await axios.post(`${BASE_URL}add-emp`, empData); \n  //      return response.data;\n  //    }catch (error) {\n  //     console.log(error);\n  //     throw new Error(error);\n  //    }\n\n  // },\n  getEmployee: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-all-emps`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n};\nexport default EmpService;","map":{"version":3,"names":["axios","BASE_URL","EmpService","getEmployee","response","get","data","error","console","log","Error"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/services/EmployeeService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = 'http://localhost:8000/emp/';\r\nconst EmpService={\r\n    // AddEmployee:async(empData)=>{\r\n    //    try{\r\n    //      const response=await axios.post(`${BASE_URL}add-emp`, empData); \r\n    //      return response.data;\r\n    //    }catch (error) {\r\n    //     console.log(error);\r\n    //     throw new Error(error);\r\n    //    }\r\n\r\n    // },\r\n    getEmployee: async ()=>{\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-all-emps`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\nexport default EmpService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B;AAC7C,MAAMC,UAAU,GAAC;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAU;IACnB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,cAAa,CAAC;MAC3D,OAAOG,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EACJ;AASJ,CAAC;AACD,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
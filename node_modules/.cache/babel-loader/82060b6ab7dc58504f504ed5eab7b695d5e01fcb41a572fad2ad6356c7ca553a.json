{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconsole.log('cartSlice');\nconst initialState = {\n  items: '',\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    // more methods \n\n    addItem: (state, action) => {\n      const existingItem = state.items.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += 1; // Update quantity for existing item\n      } else {\n        state.items.push({\n          ...action.payload,\n          quantity: 1\n        }); // Add new item with quantity 1\n      }\n      state.totalQuantity += 1; // Increment total quantity\n    }\n  }\n});\nexport default cartSlice.reducer;\nexport const {\n  addItem,\n  updateQuantity\n} = cartSlice.actions;","map":{"version":3,"names":["createSlice","console","log","initialState","items","totalQuantity","cartSlice","name","reducers","addItem","state","action","existingItem","find","item","id","payload","quantity","push","reducer","updateQuantity","actions"],"sources":["C:/Varshini/OrderManagement/Frontend/order-managemnet/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconsole.log('cartSlice');\r\n\r\nconst initialState = {\r\n    items: '',\r\n    totalQuantity: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState ,\r\n    reducers : { // more methods \r\n       \r\n        addItem: (state, action) => {\r\n            const existingItem = state.items.find(item => item.id === action.payload.id);\r\n            if (existingItem) {\r\n              existingItem.quantity += 1; // Update quantity for existing item\r\n            } else {\r\n              state.items.push({ ...action.payload, quantity: 1 }); // Add new item with quantity 1\r\n            }\r\n            state.totalQuantity += 1; // Increment total quantity\r\n          },\r\n          \r\n      \r\n    }\r\n});\r\nexport default cartSlice.reducer;\r\n\r\nexport const {addItem,updateQuantity} = cartSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9CC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;AAExB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAG;IAAE;;IAETC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAMC,YAAY,GAAGF,KAAK,CAACN,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAC5E,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACK,QAAQ,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLP,KAAK,CAACN,KAAK,CAACc,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC,CAAC;MACxD;MACAP,KAAK,CAACL,aAAa,IAAI,CAAC,CAAC,CAAC;IAC5B;EAGN;AACJ,CAAC,CAAC;AACF,eAAeC,SAAS,CAACa,OAAO;AAEhC,OAAO,MAAM;EAACV,OAAO;EAACW;AAAc,CAAC,GAAGd,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"UserService;\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:2000';\nconst UserService = {\n  registerUser: async userData => {\n    try {\n      const response = await axios.post(`${BASE_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      // return error;\n      throw new Error(error); //seious error\n    }\n  },\n  loginUser: async credentials => {\n    try {\n      const response = await axios.post(`${BASE_URL}/login`, credentials);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  updateUserProfile: async (updatedData, token) => {\n    console.log(updatedData);\n    try {\n      const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n};\nexport default UserService;","map":{"version":3,"names":["UserService","axios","BASE_URL","registerUser","userData","response","post","data","error","console","log","Error","loginUser","credentials","updateUserProfile","updatedData","token","put","_id","headers","authorization"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/services/UserService.js"],"sourcesContent":["UserService \nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:2000';\n\nconst UserService = {\n    registerUser: async (userData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n           // return error;\n           throw new Error(error);  //seious error\n        }\n    },\n\n    loginUser: async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\n            console.log(response);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    },\n\n    updateUserProfile: async (updatedData, token) => {\n        console.log(updatedData);\n        try {\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n                headers: { authorization: `Bearer ${token}` }\n            });\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n};\n\nexport default UserService;\n"],"mappings":"AAAAA,WAAW;AACX,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMF,WAAW,GAAG;EAChBG,YAAY,EAAE,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,WAAU,EAAEE,QAAQ,CAAC;MACnE,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACnB;MACA,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC,CAAC,CAAE;IAC5B;EACJ,CAAC;EAEDI,SAAS,EAAE,MAAOC,WAAW,IAAK;IAC9B,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,QAAO,EAAEW,WAAW,CAAC;MACnEJ,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EACJ,CAAC;EAEDM,iBAAiB,EAAE,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;IAC7CP,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;IACxB,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAAE,GAAEf,QAAS,UAASa,WAAW,CAACG,GAAI,EAAC,EAAEH,WAAW,EAAE;QAClFI,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAChD,CAAC,CAAC;MACFP,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACE,IAAI,CAAC;MAC1B,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAOA,KAAK;IAChB;EACJ;AACJ,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
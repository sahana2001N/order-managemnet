{"ast":null,"code":"var _jsxFileName = \"C:\\\\login\\\\reactjs\\\\ibm-final-demos-may-2024-main\\\\03-ibm-frontend-react\\\\src\\\\components\\\\EmpList.js\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmpList = () => {\n  // const [empList, setEmpList] = useState('');\n\n  // useEffect(() => {\n  //     console.log('useEffect');\n  //     axios.get('http://localhost:8000/emp/get-all-emps')\n  //         .then((resp) => {\n  //             console.log(resp.data);\n  //             setEmpList(resp.data);\n  //         })\n  // }, []);\n  const BASE_URL = 'http://localhost:8000';\n  const getEmployee = async userData => {\n    console.log(userData);\n    try {\n      const response = await axios.post(`${BASE_URL}/emp/get-all-emps`, userData);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  };\n  const handleDelete = async employeeId => {\n    try {\n      console.log(employeeId);\n      await axios.delete(`http://localhost:8000/emp/delete-emp/${employeeId}`);\n      setEmpList(empList.filter(emp => emp.employeeId !== employeeId));\n      //setEmpList('');\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      throw new error(error);\n    }\n  };\n\n  // const handleUpdate = async (employeeId) => {\n  //     try {\n  //         const updatedEmployeeData = {\n  //             firstName: 'sheela',\n  //             email: 'updated@example.com',\n\n  //         };\n  //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n  //         // Assuming the backend returns the updated employee data, you can handle it here\n  //         console.log('Employee updated:', response.data);\n\n  //         // Refresh employee list or update specific employee in the list if necessary\n  //     } catch (error) {\n  //         console.error('Error updating employee:', error);\n  //         throw new error(error)\n  //     }\n  // };\n  // const handleUpdate = async (employeeId,updatedEmployeeData) => {\n  //     try {\n  //         // Send a PUT request to the backend API with the updated employee data\n  //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n  //         // Log the updated employee data to the console\n  //         console.log('Employee updated:', response.data);\n\n  //         // You can update the employee list or perform any other necessary actions here\n  //     } catch (error) {\n  //         // Log the error to the console\n  //         console.error('Error updating employee:', error);\n  //         // Rethrow the error to handle it in the calling context if needed\n  //         throw new Error(error);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2px',\n        border: '1px solid #ccc',\n        borderRadius: '1px',\n        backgroundColor: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '5px'\n        },\n        children: \"Updated data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"FirstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: empList && empList.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: emp.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: emp.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDelete(emp.employeeId),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)]\n            }, emp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = EmpList;\nexport default EmpList;\n\n// import axios from \"axios\";\n// import { useState } from \"react\";\n\n// const EmpList = () => {\n\n//     const [empList, setEmpList] = useState('');\n\n//     const getEmpList = () => {\n//         axios.get('https://jsonplaceholder.typicode.com/users')\n//             .then((resp) => {\n//                 console.log(resp);\n//                 setEmpList(resp.data);\n//             })\n//     };\n\n//     return (\n//         <>\n//             <h1>EmpList Component</h1>\n//             <p> {empList && empList.length} </p>\n//             <button onClick={getEmpList}>Get Emp List</button>\n\n//         </>\n//     );\n// };\n\n// export default EmpList;\nvar _c;\n$RefreshReg$(_c, \"EmpList\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EmpList","BASE_URL","getEmployee","userData","console","log","response","post","data","error","Error","handleDelete","employeeId","delete","setEmpList","empList","filter","emp","children","style","padding","border","borderRadius","backgroundColor","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","className","map","firstName","email","onClick","id","_c","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/EmpList.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\n\nconst EmpList = () => {\n\n    // const [empList, setEmpList] = useState('');\n\n    // useEffect(() => {\n    //     console.log('useEffect');\n    //     axios.get('http://localhost:8000/emp/get-all-emps')\n    //         .then((resp) => {\n    //             console.log(resp.data);\n    //             setEmpList(resp.data);\n    //         })\n    // }, []);\n    const BASE_URL = 'http://localhost:8000';\n    const getEmployee = async (userData) => {\n        console.log(userData);\n        try {\n          const response = await axios.post(`${BASE_URL}/emp/get-all-emps`, userData);\n          console.log(response);\n          return response.data;\n        } catch (error) {\n          console.log(error);\n          throw new Error(error);\n        }\n      };\n\n    const handleDelete = async (employeeId) => {\n        try {\n           console.log(employeeId);\n            await axios.delete(`http://localhost:8000/emp/delete-emp/${employeeId}`);\n            setEmpList(empList.filter(emp => emp.employeeId !== employeeId));\n            //setEmpList('');\n        } catch (error) {\n            console.error('Error deleting employee:', error);\n            throw new error(error)\n        }\n\n        \n    };\n\n    // const handleUpdate = async (employeeId) => {\n    //     try {\n    //         const updatedEmployeeData = {\n    //             firstName: 'sheela',\n    //             email: 'updated@example.com',\n                \n    //         };\n    //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n    //         // Assuming the backend returns the updated employee data, you can handle it here\n    //         console.log('Employee updated:', response.data);\n\n    //         // Refresh employee list or update specific employee in the list if necessary\n    //     } catch (error) {\n    //         console.error('Error updating employee:', error);\n    //         throw new error(error)\n    //     }\n    // };\n    // const handleUpdate = async (employeeId,updatedEmployeeData) => {\n    //     try {\n    //         // Send a PUT request to the backend API with the updated employee data\n    //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n    //         // Log the updated employee data to the console\n    //         console.log('Employee updated:', response.data);\n\n    //         // You can update the employee list or perform any other necessary actions here\n    //     } catch (error) {\n    //         // Log the error to the console\n    //         console.error('Error updating employee:', error);\n    //         // Rethrow the error to handle it in the calling context if needed\n    //         throw new Error(error);\n    //     }\n    // };\n\n\n    return (\n        <>\n            <div style={{ padding: '2px', border: '1px solid #ccc', borderRadius: '1px', backgroundColor: '#fff' }}>\n                <h2 style={{ textAlign: 'center', marginBottom: '5px' }}>Updated data</h2>\n                <div>\n                    <table className=\"table table-bordered text-center\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th>FirstName</th>\n                                <th>Email</th>\n                                <th>Actions</th> \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {empList && empList.map(emp =>\n                                <tr key={emp.id}>\n                                    <td>{emp.firstName}</td>\n                                    <td>{emp.email}</td>\n                                    <td>\n                                        <button className=\"btn btn-danger\" onClick={() => handleDelete(emp.employeeId)}>Delete</button>\n                                        {/* <button className=\"btn btn-primary\" onClick=>Update</button> */}\n                                        {/* <button type=\"submit\" className=\"btn btn-primary\" >update</button> */}\n\n                                    </td> \n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n\n        </>\n    );\n};\n\nexport default EmpList;\n\n\n// import axios from \"axios\";\n// import { useState } from \"react\";\n\n// const EmpList = () => {\n\n//     const [empList, setEmpList] = useState('');\n\n//     const getEmpList = () => {\n//         axios.get('https://jsonplaceholder.typicode.com/users')\n//             .then((resp) => {\n//                 console.log(resp);\n//                 setEmpList(resp.data);\n//             })\n//     };\n\n//     return (\n//         <>\n//             <h1>EmpList Component</h1>\n//             <p> {empList && empList.length} </p>\n//             <button onClick={getEmpList}>Get Emp List</button>\n\n//         </>\n//     );\n// };\n\n// export default EmpList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\login\\\\reactjs\\\\ibm-final-demos-may-2024-main\\\\03-ibm-frontend-react\\\\src\\\\components\\\\admin\\\\adminLogin.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n//import AdminService from \"../../services/AdminService\";\nimport { adminLogin } from \"../../redux/adminSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const [afterSubmit, setAfterSubmit] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleChange = evt => {\n    console.log(evt.target.name);\n    console.log(evt.target.value);\n    setLoginData({\n      ...loginData,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  // const handleLoginSubmit = (evt) => {\n  //     evt.preventDefault();\n  //     console.log(loginData);\n  //     AdminService.loginAdmin(loginData)\n  //         .then((response) => {\n  //             console.log(response);\n  //             setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\n  //             setTimeout(() => {\n  //                 setLoginData({ username: '', password: '' });\n  //                 dispatch(adminLogin(response));\n  //                 navigate('/profile');\n  //             }, 2000);\n  //         })\n  //         .catch((error) => {\n  //             console.log(error);\n  //             setLoginData({ username: '', password: '' });\n  //             setAfterSubmit(`Invalid credentials!`);\n  //         });\n  // };\n\n  const handleLoginSubmit = evt => {\n    evt.preventDefault();\n    console.log(loginData);\n\n    // Check if the username and password match the hardcoded values\n    if (loginData.username === 'admin' && loginData.password === 'admin') {\n      // If match, log in successfully\n      setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\n      setTimeout(() => {\n        setLoginData({\n          username: '',\n          password: ''\n        });\n        // Dispatch action for admin login (assuming this is defined elsewhere)\n        dispatch(adminLogin( /* pass any necessary data here */));\n        navigate('/home');\n      }, 2000);\n    } else {\n      // If not match, show invalid credentials message\n      setLoginData({\n        username: '',\n        password: ''\n      });\n      setAfterSubmit(`Invalid credentials!`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '60vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '300px',\n          padding: '20px',\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          backgroundColor: '#fff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center',\n            marginBottom: '10px'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLoginSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"username\",\n              value: loginData.username,\n              onChange: handleChange,\n              autoFocus: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: loginData.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 3\n          }, this), afterSubmit && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: afterSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Not yet registered? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: '/register',\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 24\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(AdminLogin, \"uFjSD2rvL3AIE1YO/k9d7X4r0dk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useState","Link","useNavigate","adminLogin","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminLogin","_s","loginData","setLoginData","username","password","afterSubmit","setAfterSubmit","navigate","dispatch","handleChange","evt","console","log","target","name","value","handleLoginSubmit","preventDefault","setTimeout","children","style","display","justifyContent","alignItems","minHeight","width","padding","border","borderRadius","backgroundColor","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","onChange","autoFocus","required","to","_c","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/admin/adminLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n//import AdminService from \"../../services/AdminService\";\r\nimport { adminLogin } from \"../../redux/adminSlice\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const [loginData, setLoginData] = useState({ username: '', password: '' });\r\n    const [afterSubmit, setAfterSubmit] = useState('');\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (evt) => {\r\n        console.log(evt.target.name);\r\n        console.log(evt.target.value);\r\n        setLoginData({\r\n            ...loginData,\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    };\r\n\r\n    // const handleLoginSubmit = (evt) => {\r\n    //     evt.preventDefault();\r\n    //     console.log(loginData);\r\n    //     AdminService.loginAdmin(loginData)\r\n    //         .then((response) => {\r\n    //             console.log(response);\r\n    //             setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\r\n    //             setTimeout(() => {\r\n    //                 setLoginData({ username: '', password: '' });\r\n    //                 dispatch(adminLogin(response));\r\n    //                 navigate('/profile');\r\n    //             }, 2000);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //             setLoginData({ username: '', password: '' });\r\n    //             setAfterSubmit(`Invalid credentials!`);\r\n    //         });\r\n    // };\r\n    \r\n\r\n    const handleLoginSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(loginData);\r\n    \r\n        // Check if the username and password match the hardcoded values\r\n        if (loginData.username === 'admin' && loginData.password === 'admin') {\r\n            // If match, log in successfully\r\n            setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\r\n            setTimeout(() => {\r\n                setLoginData({ username: '', password: '' });\r\n                // Dispatch action for admin login (assuming this is defined elsewhere)\r\n                dispatch(adminLogin(/* pass any necessary data here */));\r\n                navigate('/home');\r\n            }, 2000);\r\n        } else {\r\n            // If not match, show invalid credentials message\r\n            setLoginData({ username: '', password: '' });\r\n            setAfterSubmit(`Invalid credentials!`);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n\r\n            {/* <h1>Login Component</h1>\r\n            <p>Login here</p>\r\n            <form onSubmit={handleLoginSubmit}>\r\n                <input type=\"text\" name=\"username\" value={loginData.username}\r\n                    onChange={handleChange} autoFocus required />\r\n                <br />\r\n                <input type=\"password\" name=\"password\" value={loginData.password}\r\n                    onChange={handleChange} required />\r\n                <br />\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n            {afterSubmit && <p>{afterSubmit}</p>}\r\n            <p>Not yet registered? <Link to={'/register'}>Register</Link> </p> */}\r\n\r\n<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\r\n<div style={{ width: '300px', padding: '20px', border: '1px solid #ccc', borderRadius: '5px', backgroundColor: '#fff' }}>\r\n    <h2 style={{ textAlign: 'center', marginBottom: '10px' }}>Login</h2>\r\n  <form onSubmit={handleLoginSubmit}>\r\n<div className=\"mb-3\">\r\n    <label className=\"form-label\">Username</label>\r\n    <input type=\"text\" className=\"form-control\" name=\"username\" value={loginData.username}\r\n                    onChange={handleChange} autoFocus required />\r\n   </div>\r\n  <div className=\"mb-3\">\r\n    <label className=\"form-label\">Password</label>\r\n    <input type=\"password\" className=\"form-control\" name=\"password\" value={loginData.password}\r\n                    onChange={handleChange} required />\r\n   </div>\r\n  \r\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n  {/*\r\n  {afterSubmit && <p>{afterSubmit}</p>}\r\n<p>Not yet registered? <Link to={'/product'}>Register</Link> </p>\r\n        */}\r\n\r\n{afterSubmit && <p>{afterSubmit}</p>}\r\n<p>Not yet registered? <Link to={'/register'}>Register</Link> </p>\r\n  \r\n  </form>\r\n  </div>\r\n  </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
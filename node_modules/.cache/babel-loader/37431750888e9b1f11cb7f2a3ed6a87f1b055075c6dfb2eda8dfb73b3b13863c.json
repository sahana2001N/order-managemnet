{"ast":null,"code":"// import { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// //import AdminService from \"../../services/AdminService\";\n// import { adminLogin } from \"../../redux/adminSlice\";\n\n// import { useDispatch } from \"react-redux\";\n\n// const AdminLogin = () => {\n\n//     const [loginData, setLoginData] = useState({ username: '', password: '' });\n//     const [afterSubmit, setAfterSubmit] = useState('');\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n\n//     const handleChange = (evt) => {\n//         console.log(evt.target.name);\n//         console.log(evt.target.value);\n//         setLoginData({\n//             ...loginData,\n//             [evt.target.name]: evt.target.value\n//         });\n//     };\n\n//     // const handleLoginSubmit = (evt) => {\n//     //     evt.preventDefault();\n//     //     console.log(loginData);\n//     //     AdminService.loginAdmin(loginData)\n//     //         .then((response) => {\n//     //             console.log(response);\n//     //             setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\n//     //             setTimeout(() => {\n//     //                 setLoginData({ username: '', password: '' });\n//     //                 dispatch(adminLogin(response));\n//     //                 navigate('/profile');\n//     //             }, 2000);\n//     //         })\n//     //         .catch((error) => {\n//     //             console.log(error);\n//     //             setLoginData({ username: '', password: '' });\n//     //             setAfterSubmit(`Invalid credentials!`);\n//     //         });\n//     // };\n\n//     const handleLoginSubmit = (evt) => {\n//         evt.preventDefault();\n//         console.log(loginData);\n\n//         // Check if the username and password match the hardcoded values\n//         if (loginData.username === 'admin' && loginData.password === 'admin') {\n//             // If match, log in successfully\n//             setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\n//             setTimeout(() => {\n//                 setLoginData({ username: '', password: '' });\n//                 // Dispatch action for admin login (assuming this is defined elsewhere)\n//                 dispatch(adminLogin(/* pass any necessary data here */));\n//                 navigate('/home');\n//             }, 2000);\n//         } else {\n//             // If not match, show invalid credentials message\n//             setLoginData({ username: '', password: '' });\n//             setAfterSubmit(`Invalid credentials!`);\n//         }\n//     };\n\n//     return (\n//         <>\n\n//             {/* <h1>Login Component</h1>\n//             <p>Login here</p>\n//             <form onSubmit={handleLoginSubmit}>\n//                 <input type=\"text\" name=\"username\" value={loginData.username}\n//                     onChange={handleChange} autoFocus required />\n//                 <br />\n//                 <input type=\"password\" name=\"password\" value={loginData.password}\n//                     onChange={handleChange} required />\n//                 <br />\n//                 <input type=\"submit\" value=\"Login\" />\n//             </form>\n//             {afterSubmit && <p>{afterSubmit}</p>}\n//             <p>Not yet registered? <Link to={'/register'}>Register</Link> </p> */}\n\n// <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\n// <div style={{ width: '300px', padding: '20px', border: '1px solid #ccc', borderRadius: '5px', backgroundColor: '#fff' }}>\n//     <h2 style={{ textAlign: 'center', marginBottom: '10px' }}>Login</h2>\n//   <form onSubmit={handleLoginSubmit}>\n// <div className=\"mb-3\">\n//     <label className=\"form-label\">Username</label>\n//     <input type=\"text\" className=\"form-control\" name=\"username\" value={loginData.username}\n//                     onChange={handleChange} autoFocus required />\n//    </div>\n//   <div className=\"mb-3\">\n//     <label className=\"form-label\">Password</label>\n//     <input type=\"password\" className=\"form-control\" name=\"password\" value={loginData.password}\n//                     onChange={handleChange} required />\n//    </div>\n\n//   <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\n//   {/*\n//   {afterSubmit && <p>{afterSubmit}</p>}\n// <p>Not yet registered? <Link to={'/product'}>Register</Link> </p>\n//         */}\n\n// {afterSubmit && <p>{afterSubmit}</p>}\n// <p>Not yet registered? <Link to={'/register'}>Register</Link> </p>\n\n//   </form>\n//   </div>\n//   </div>\n\n//         </>\n//     );\n// };\n\n// export default AdminLogin;","map":{"version":3,"names":[],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/admin/adminLogin.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// //import AdminService from \"../../services/AdminService\";\r\n// import { adminLogin } from \"../../redux/adminSlice\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n\r\n\r\n// const AdminLogin = () => {\r\n\r\n//     const [loginData, setLoginData] = useState({ username: '', password: '' });\r\n//     const [afterSubmit, setAfterSubmit] = useState('');\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n\r\n//     const handleChange = (evt) => {\r\n//         console.log(evt.target.name);\r\n//         console.log(evt.target.value);\r\n//         setLoginData({\r\n//             ...loginData,\r\n//             [evt.target.name]: evt.target.value\r\n//         });\r\n//     };\r\n\r\n//     // const handleLoginSubmit = (evt) => {\r\n//     //     evt.preventDefault();\r\n//     //     console.log(loginData);\r\n//     //     AdminService.loginAdmin(loginData)\r\n//     //         .then((response) => {\r\n//     //             console.log(response);\r\n//     //             setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\r\n//     //             setTimeout(() => {\r\n//     //                 setLoginData({ username: '', password: '' });\r\n//     //                 dispatch(adminLogin(response));\r\n//     //                 navigate('/profile');\r\n//     //             }, 2000);\r\n//     //         })\r\n//     //         .catch((error) => {\r\n//     //             console.log(error);\r\n//     //             setLoginData({ username: '', password: '' });\r\n//     //             setAfterSubmit(`Invalid credentials!`);\r\n//     //         });\r\n//     // };\r\n\r\n\r\n//     const handleLoginSubmit = (evt) => {\r\n//         evt.preventDefault();\r\n//         console.log(loginData);\r\n    \r\n//         // Check if the username and password match the hardcoded values\r\n//         if (loginData.username === 'admin' && loginData.password === 'admin') {\r\n//             // If match, log in successfully\r\n//             setAfterSubmit(`Hi ${loginData.username}! You've logged in successfully!`);\r\n//             setTimeout(() => {\r\n//                 setLoginData({ username: '', password: '' });\r\n//                 // Dispatch action for admin login (assuming this is defined elsewhere)\r\n//                 dispatch(adminLogin(/* pass any necessary data here */));\r\n//                 navigate('/home');\r\n//             }, 2000);\r\n//         } else {\r\n//             // If not match, show invalid credentials message\r\n//             setLoginData({ username: '', password: '' });\r\n//             setAfterSubmit(`Invalid credentials!`);\r\n//         }\r\n//     };\r\n    \r\n//     return (\r\n//         <>\r\n\r\n//             {/* <h1>Login Component</h1>\r\n//             <p>Login here</p>\r\n//             <form onSubmit={handleLoginSubmit}>\r\n//                 <input type=\"text\" name=\"username\" value={loginData.username}\r\n//                     onChange={handleChange} autoFocus required />\r\n//                 <br />\r\n//                 <input type=\"password\" name=\"password\" value={loginData.password}\r\n//                     onChange={handleChange} required />\r\n//                 <br />\r\n//                 <input type=\"submit\" value=\"Login\" />\r\n//             </form>\r\n//             {afterSubmit && <p>{afterSubmit}</p>}\r\n//             <p>Not yet registered? <Link to={'/register'}>Register</Link> </p> */}\r\n\r\n// <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\r\n// <div style={{ width: '300px', padding: '20px', border: '1px solid #ccc', borderRadius: '5px', backgroundColor: '#fff' }}>\r\n//     <h2 style={{ textAlign: 'center', marginBottom: '10px' }}>Login</h2>\r\n//   <form onSubmit={handleLoginSubmit}>\r\n// <div className=\"mb-3\">\r\n//     <label className=\"form-label\">Username</label>\r\n//     <input type=\"text\" className=\"form-control\" name=\"username\" value={loginData.username}\r\n//                     onChange={handleChange} autoFocus required />\r\n//    </div>\r\n//   <div className=\"mb-3\">\r\n//     <label className=\"form-label\">Password</label>\r\n//     <input type=\"password\" className=\"form-control\" name=\"password\" value={loginData.password}\r\n//                     onChange={handleChange} required />\r\n//    </div>\r\n  \r\n//   <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n//   {/*\r\n//   {afterSubmit && <p>{afterSubmit}</p>}\r\n// <p>Not yet registered? <Link to={'/product'}>Register</Link> </p>\r\n//         */}\r\n\r\n// {afterSubmit && <p>{afterSubmit}</p>}\r\n// <p>Not yet registered? <Link to={'/register'}>Register</Link> </p>\r\n  \r\n//   </form>\r\n//   </div>\r\n//   </div>\r\n\r\n\r\n\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default AdminLogin;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
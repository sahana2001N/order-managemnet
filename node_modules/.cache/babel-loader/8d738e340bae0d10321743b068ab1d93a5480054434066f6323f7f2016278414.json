{"ast":null,"code":"var _jsxFileName = \"C:\\\\login\\\\reactjs\\\\ibm-final-demos-may-2024-main\\\\03-ibm-frontend-react\\\\src\\\\components\\\\EmpList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport EmployeeService from \"../services/EmployeeService\";\nimport { setAllEmp } from \"../redux/EmpSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmpList = () => {\n  _s();\n  //const [empList, setEmpList] = useState('');\n\n  const dispatch = useDispatch();\n  const empList = useSelector(state => state.emp.empDataList);\n  useEffect(() => {\n    console.log('useEffect');\n    // axios.get('http://localhost:8000/emp/get-all-emps')\n    EmployeeService.getEmployee().then(resp => {\n      console.log(resp.data);\n      //setEmpList(resp.data);\n      dispatch(setAllEmp(resp));\n    });\n  }, []);\n  // const handleDelete = async (employeeId) => {\n  //     try {\n  //        console.log(employeeId);\n  //         await axios.delete(`http://localhost:8000/emp/delete-emp/${employeeId}`);\n  //         setEmpList(empList.filter(emp => emp.employeeId !== employeeId));\n  //         //setEmpList('');\n  //     } catch (error) {\n  //         console.error('Error deleting employee:', error);\n  //         throw new error(error)\n  //     }\n\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2px',\n        border: '1px solid #ccc',\n        borderRadius: '1px',\n        backgroundColor: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '5px'\n        },\n        children: \"Updated data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"FirstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: empList && empList.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: emp.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: emp.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)]\n            }, emp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EmpList, \"uooYxuJkZqFk1a13Y9V89zS0/vE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EmpList;\nexport default EmpList;\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n\n// const EmpList = () => {\n\n//     const [empList, setEmpList] = useState('');\n\n//     useEffect(() => {\n//         console.log('useEffect');\n//         axios.get('http://localhost:8000/emp/get-all-emps')\n//             .then((resp) => {\n//                 console.log(resp.data);\n//                 setEmpList(resp.data);\n//             })\n//     }, []);\n\n//     const handleDelete = async (employeeId) => {\n//         try {\n//            console.log(employeeId);\n//             await axios.delete(`http://localhost:8000/emp/delete-emp/${employeeId}`);\n//             setEmpList(empList.filter(emp => emp.employeeId !== employeeId));\n//             //setEmpList('');\n//         } catch (error) {\n//             console.error('Error deleting employee:', error);\n//             throw new error(error)\n//         }\n\n//     };\n\n//     // const handleUpdate = async (employeeId) => {\n//     //     try {\n//     //         const updatedEmployeeData = {\n//     //             firstName: 'sheela',\n//     //             email: 'updated@example.com',\n\n//     //         };\n//     //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n//     //         // Assuming the backend returns the updated employee data, you can handle it here\n//     //         console.log('Employee updated:', response.data);\n\n//     //         // Refresh employee list or update specific employee in the list if necessary\n//     //     } catch (error) {\n//     //         console.error('Error updating employee:', error);\n//     //         throw new error(error)\n//     //     }\n//     // };\n//     // const handleUpdate = async (employeeId,updatedEmployeeData) => {\n//     //     try {\n//     //         // Send a PUT request to the backend API with the updated employee data\n//     //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n//     //         // Log the updated employee data to the console\n//     //         console.log('Employee updated:', response.data);\n\n//     //         // You can update the employee list or perform any other necessary actions here\n//     //     } catch (error) {\n//     //         // Log the error to the console\n//     //         console.error('Error updating employee:', error);\n//     //         // Rethrow the error to handle it in the calling context if needed\n//     //         throw new Error(error);\n//     //     }\n//     // };\n\n//     return (\n//         <>\n//             <div style={{ padding: '2px', border: '1px solid #ccc', borderRadius: '1px', backgroundColor: '#fff' }}>\n//                 <h2 style={{ textAlign: 'center', marginBottom: '5px' }}>Updated data</h2>\n//                 <div>\n//                     <table className=\"table table-bordered text-center\">\n//                         <thead className=\"thead-dark\">\n//                             <tr>\n//                                 <th>FirstName</th>\n//                                 <th>Email</th>\n//                                 <th>Actions</th> \n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {empList && empList.map(emp =>\n//                                 <tr key={emp.id}>\n//                                     <td>{emp.firstName}</td>\n//                                     <td>{emp.email}</td>\n//                                     <td>\n//                                         <button className=\"btn btn-danger\" onClick={() => handleDelete(emp.employeeId)}>Delete</button>\n//                                         {/* <button className=\"btn btn-primary\" onClick=>Update</button> */}\n//                                         {/* <button type=\"submit\" className=\"btn btn-primary\" >update</button> */}\n\n//                                     </td> \n//                                 </tr>\n//                             )}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             </div>\n\n//         </>\n//     );\n// };\n\n// export default EmpList;\nvar _c;\n$RefreshReg$(_c, \"EmpList\");","map":{"version":3,"names":["axios","useEffect","useState","EmployeeService","setAllEmp","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","EmpList","_s","dispatch","empList","state","emp","empDataList","console","log","getEmployee","then","resp","data","children","style","padding","border","borderRadius","backgroundColor","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","className","map","firstName","email","id","_c","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/EmpList.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport EmployeeService from \"../services/EmployeeService\";\nimport { setAllEmp } from \"../redux/EmpSlice\";\nimport {useDispatch,useSelector} from \"react-redux\";\nconst EmpList = () => {\n\n    //const [empList, setEmpList] = useState('');\n\n    \n    const dispatch=useDispatch();\n    const empList=useSelector(state=>state.emp.empDataList)\n    useEffect(() => {\n        console.log('useEffect');\n       // axios.get('http://localhost:8000/emp/get-all-emps')\n            EmployeeService.getEmployee()\n            .then((resp) => {\n                console.log(resp.data);\n                //setEmpList(resp.data);\n                dispatch(setAllEmp(resp));\n            })\n    }, []);\n    // const handleDelete = async (employeeId) => {\n    //     try {\n    //        console.log(employeeId);\n    //         await axios.delete(`http://localhost:8000/emp/delete-emp/${employeeId}`);\n    //         setEmpList(empList.filter(emp => emp.employeeId !== employeeId));\n    //         //setEmpList('');\n    //     } catch (error) {\n    //         console.error('Error deleting employee:', error);\n    //         throw new error(error)\n    //     }\n\n        \n    // };\n\n    \n\n    return (\n        <>\n            <div style={{ padding: '2px', border: '1px solid #ccc', borderRadius: '1px', backgroundColor: '#fff' }}>\n                <h2 style={{ textAlign: 'center', marginBottom: '5px' }}>Updated data</h2>\n                <div>\n                    <table className=\"table table-bordered text-center\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th>FirstName</th>\n                                <th>Email</th>\n                                <th>Actions</th> \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {empList && empList.map(emp =>\n                                <tr key={emp.id}>\n                                    <td>{emp.firstName}</td>\n                                    <td>{emp.email}</td>\n                                    <td>\n                                        {/* <button className=\"btn btn-danger\" onClick={() => handleDelete(emp.employeeId)}>Delete</button> */}\n                                        {/* <button className=\"btn btn-primary\" onClick=>Update</button> */}\n                                        {/* <button type=\"submit\" className=\"btn btn-primary\" >update</button> */}\n\n                                    </td> \n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n\n        </>\n    );\n};\n\nexport default EmpList;\n\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n\n// const EmpList = () => {\n\n//     const [empList, setEmpList] = useState('');\n\n//     useEffect(() => {\n//         console.log('useEffect');\n//         axios.get('http://localhost:8000/emp/get-all-emps')\n//             .then((resp) => {\n//                 console.log(resp.data);\n//                 setEmpList(resp.data);\n//             })\n//     }, []);\n\n//     const handleDelete = async (employeeId) => {\n//         try {\n//            console.log(employeeId);\n//             await axios.delete(`http://localhost:8000/emp/delete-emp/${employeeId}`);\n//             setEmpList(empList.filter(emp => emp.employeeId !== employeeId));\n//             //setEmpList('');\n//         } catch (error) {\n//             console.error('Error deleting employee:', error);\n//             throw new error(error)\n//         }\n\n        \n//     };\n\n//     // const handleUpdate = async (employeeId) => {\n//     //     try {\n//     //         const updatedEmployeeData = {\n//     //             firstName: 'sheela',\n//     //             email: 'updated@example.com',\n                \n//     //         };\n//     //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n//     //         // Assuming the backend returns the updated employee data, you can handle it here\n//     //         console.log('Employee updated:', response.data);\n\n//     //         // Refresh employee list or update specific employee in the list if necessary\n//     //     } catch (error) {\n//     //         console.error('Error updating employee:', error);\n//     //         throw new error(error)\n//     //     }\n//     // };\n//     // const handleUpdate = async (employeeId,updatedEmployeeData) => {\n//     //     try {\n//     //         // Send a PUT request to the backend API with the updated employee data\n//     //         const response = await axios.put(`http://localhost:8000/emp/update-emp/${employeeId}`, updatedEmployeeData);\n\n//     //         // Log the updated employee data to the console\n//     //         console.log('Employee updated:', response.data);\n\n//     //         // You can update the employee list or perform any other necessary actions here\n//     //     } catch (error) {\n//     //         // Log the error to the console\n//     //         console.error('Error updating employee:', error);\n//     //         // Rethrow the error to handle it in the calling context if needed\n//     //         throw new Error(error);\n//     //     }\n//     // };\n\n\n//     return (\n//         <>\n//             <div style={{ padding: '2px', border: '1px solid #ccc', borderRadius: '1px', backgroundColor: '#fff' }}>\n//                 <h2 style={{ textAlign: 'center', marginBottom: '5px' }}>Updated data</h2>\n//                 <div>\n//                     <table className=\"table table-bordered text-center\">\n//                         <thead className=\"thead-dark\">\n//                             <tr>\n//                                 <th>FirstName</th>\n//                                 <th>Email</th>\n//                                 <th>Actions</th> \n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {empList && empList.map(emp =>\n//                                 <tr key={emp.id}>\n//                                     <td>{emp.firstName}</td>\n//                                     <td>{emp.email}</td>\n//                                     <td>\n//                                         <button className=\"btn btn-danger\" onClick={() => handleDelete(emp.employeeId)}>Delete</button>\n//                                         {/* <button className=\"btn btn-primary\" onClick=>Update</button> */}\n//                                         {/* <button type=\"submit\" className=\"btn btn-primary\" >update</button> */}\n\n//                                     </td> \n//                                 </tr>\n//                             )}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             </div>\n\n\n//         </>\n//     );\n// };\n\n// export default EmpList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\login\\\\reactjs\\\\ibm-final-demos-may-2024-main\\\\03-ibm-frontend-react\\\\src\\\\components\\\\user\\\\Product.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch data from the URL\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setUsers(data)).catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: '18rem',\n        margin: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-subtitle mb-2 text-muted\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Phone: \", user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://${user.website}`,\n          className: \"card-link\",\n          children: user.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = Product;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["Product","_s","users","setUsers","useState","useEffect","fetch","then","response","json","data","catch","error","console","_jsxDEV","children","map","user","className","style","width","margin","name","fileName","_jsxFileName","lineNumber","columnNumber","username","email","phone","href","website","id","_c","MyComponent","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/user/Product.js"],"sourcesContent":["\r\n\r\nconst Product=()=> {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the URL\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(data => setUsers(data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n  return (\r\n    <div>\r\n      {/* Mapping over the users array and rendering a card component for each user */}\r\n      {users.map(user => (\r\n        <div key={user.id} className=\"card\" style={{ width: '18rem', margin: '1rem' }}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{user.name}</h5>\r\n            <h6 className=\"card-subtitle mb-2 text-muted\">{user.username}</h6>\r\n            <p className=\"card-text\">Email: {user.email}</p>\r\n            <p className=\"card-text\">Phone: {user.phone}</p>\r\n            <a href={`https://${user.website}`} className=\"card-link\">{user.website}</a>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n\r\n            \r\n\r\n        \r\n     \r\n        "],"mappings":";;;AAEA,MAAMA,OAAO,GAACA,CAAA,KAAK;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEE,OAAA;IAAAC,QAAA,EAEGb,KAAK,CAACc,GAAG,CAACC,IAAI,iBACbH,OAAA;MAAmBI,SAAS,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAN,QAAA,eAC5ED,OAAA;QAAKI,SAAS,EAAC,WAAW;QAAAH,QAAA,gBACxBD,OAAA;UAAII,SAAS,EAAC,YAAY;UAAAH,QAAA,EAAEE,IAAI,CAACK;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3CZ,OAAA;UAAII,SAAS,EAAC,+BAA+B;UAAAH,QAAA,EAAEE,IAAI,CAACU;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClEZ,OAAA;UAAGI,SAAS,EAAC,WAAW;UAAAH,QAAA,GAAC,SAAO,EAACE,IAAI,CAACW,KAAK;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDZ,OAAA;UAAGI,SAAS,EAAC,WAAW;UAAAH,QAAA,GAAC,SAAO,EAACE,IAAI,CAACY,KAAK;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDZ,OAAA;UAAGgB,IAAI,EAAG,WAAUb,IAAI,CAACc,OAAQ,EAAE;UAACb,SAAS,EAAC,WAAW;UAAAH,QAAA,EAAEE,IAAI,CAACc;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE;IAAC,GAPET,IAAI,CAACe,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA3BKD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA6Bb,eAAekC,WAAW;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\n// import axios from \"axios\";\n// import { useState } from \"react\";\n\n// const AddEmployee = () => {\n\n//     const backendUrl = 'https://jsonplaceholder.typicode.com/users';\n//     const [empData, setEmpData] = useState({ firstName: '', email: '', aadhaar: '', salary: '' });\n\n//     const handleChange = (evt) => {\n//         console.log(evt.target);\n//         setEmpData({ ...empData, [evt.target.name]: evt.target.value });\n//     };\n\n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         console.log(empData);\n//         axios.post(backendUrl, empData)\n//             .then((resp) => {\n//                 console.log(resp.data);\n//                 alert(`${resp.data.firstName} with id ${resp.data.id} added successfully!`);\n//                 setEmpData({ firstName: '', email: '', aadhaar: '', salary: '' });\n//             });\n//     };\n\n//     return (\n//         <>\n//             <h1>Add Employee Component</h1>\n//             <form onSubmit={handleSubmit} >\n//                 <label htmlFor=\"firstName\">First Name:</label>\n//                 <input type=\"text\" id=\"firstName\" name=\"firstName\" value={empData.firstName} onChange={handleChange} placeholder=\"Enter first name\" required autoFocus />\n//                 <br />\n//                 <label htmlFor=\"email\">Email:</label>\n//                 <input type=\"email\" id=\"email\" name=\"email\" value={empData.email} onChange={handleChange} placeholder=\"Enter email\" />\n//                 <br />\n//                 <label htmlFor=\"aadhaar\">Aadhaar:</label>\n//                 <input type=\"number\" id=\"aadhaar\" name=\"aadhaar\" value={empData.aadhaar} onChange={handleChange} placeholder=\"Enter aadhaar\" />\n//                 <br />\n//                 <label htmlFor=\"salary\">Salary:</label>\n//                 <input type=\"number\" id=\"salary\" name=\"salary\" value={empData.salary} onChange={handleChange} placeholder=\"Enter salary\" />\n//                 <br />\n//                 <input type=\"submit\" value=\"Add Employee\" />\n//             </form>\n//         </>\n//     );\n// };\n\n// export default AddEmployee;\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEmployee = () => {\n  _s();\n  const backendUrl = 'https://jsonplaceholder.typicode.com/users';\n  const [empData, setEmpData] = useState({\n    firstName: '',\n    email: '',\n    aadhaar: '',\n    salary: ''\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = evt => {\n    setEmpData({\n      ...empData,\n      [evt.target.name]: evt.target.value\n    });\n    setErrors({\n      ...errors,\n      [evt.target.name]: ''\n    });\n  };\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n    if (!empData.firstName.trim()) {\n      newErrors.firstName = \"First name is required\";\n      isValid = false;\n    }\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(empData.email)) {\n      newErrors.email = \"Invalid email address\";\n      isValid = false;\n    }\n    if (!/^\\d{12}$/.test(empData.aadhaar)) {\n      newErrors.aadhaar = \"Aadhaar must be a 12-digit number\";\n      isValid = false;\n    }\n    if (empData.salary <= 0 || isNaN(empData.salary)) {\n      newErrors.salary = \"Salary must be a positive number\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (validateForm()) {\n      axios.post(backendUrl, empData).then(resp => {\n        alert(`${resp.data.firstName} with id ${resp.data.id} added successfully!`);\n        setEmpData({\n          firstName: '',\n          email: '',\n          aadhaar: '',\n          salary: ''\n        });\n      }).catch(error => {\n        console.error(\"Error adding employee:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(AddEmployee, \"JondAkecfJKJIEKXlKgtJT4/rGc=\");\n_c = AddEmployee;\nexport default AddEmployee;\nvar _c;\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"names":["axios","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","AddEmployee","_s","backendUrl","empData","setEmpData","firstName","email","aadhaar","salary","errors","setErrors","handleChange","evt","target","name","value","validateForm","isValid","newErrors","trim","test","isNaN","handleSubmit","preventDefault","post","then","resp","alert","data","id","catch","error","console","_c","$RefreshReg$"],"sources":["C:/login/reactjs/ibm-final-demos-may-2024-main/03-ibm-frontend-react/src/components/AddEmployee.js"],"sourcesContent":["// import axios from \"axios\";\n// import { useState } from \"react\";\n\n// const AddEmployee = () => {\n\n//     const backendUrl = 'https://jsonplaceholder.typicode.com/users';\n//     const [empData, setEmpData] = useState({ firstName: '', email: '', aadhaar: '', salary: '' });\n\n//     const handleChange = (evt) => {\n//         console.log(evt.target);\n//         setEmpData({ ...empData, [evt.target.name]: evt.target.value });\n//     };\n\n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         console.log(empData);\n//         axios.post(backendUrl, empData)\n//             .then((resp) => {\n//                 console.log(resp.data);\n//                 alert(`${resp.data.firstName} with id ${resp.data.id} added successfully!`);\n//                 setEmpData({ firstName: '', email: '', aadhaar: '', salary: '' });\n//             });\n//     };\n\n//     return (\n//         <>\n//             <h1>Add Employee Component</h1>\n//             <form onSubmit={handleSubmit} >\n//                 <label htmlFor=\"firstName\">First Name:</label>\n//                 <input type=\"text\" id=\"firstName\" name=\"firstName\" value={empData.firstName} onChange={handleChange} placeholder=\"Enter first name\" required autoFocus />\n//                 <br />\n//                 <label htmlFor=\"email\">Email:</label>\n//                 <input type=\"email\" id=\"email\" name=\"email\" value={empData.email} onChange={handleChange} placeholder=\"Enter email\" />\n//                 <br />\n//                 <label htmlFor=\"aadhaar\">Aadhaar:</label>\n//                 <input type=\"number\" id=\"aadhaar\" name=\"aadhaar\" value={empData.aadhaar} onChange={handleChange} placeholder=\"Enter aadhaar\" />\n//                 <br />\n//                 <label htmlFor=\"salary\">Salary:</label>\n//                 <input type=\"number\" id=\"salary\" name=\"salary\" value={empData.salary} onChange={handleChange} placeholder=\"Enter salary\" />\n//                 <br />\n//                 <input type=\"submit\" value=\"Add Employee\" />\n//             </form>\n//         </>\n//     );\n// };\n\n// export default AddEmployee;\n\n\n\n\n\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst AddEmployee = () => {\n    const backendUrl = 'https://jsonplaceholder.typicode.com/users';\n    const [empData, setEmpData] = useState({ firstName: '', email: '', aadhaar: '', salary: '' });\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (evt) => {\n        setEmpData({ ...empData, [evt.target.name]: evt.target.value });\n        setErrors({ ...errors, [evt.target.name]: '' });\n    };\n\n    const validateForm = () => {\n        let isValid = true;\n        const newErrors = {};\n\n        if (!empData.firstName.trim()) {\n            newErrors.firstName = \"First name is required\";\n            isValid = false;\n        }\n\n        if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(empData.email)) {\n            newErrors.email = \"Invalid email address\";\n            isValid = false;\n        }\n\n        if (!/^\\d{12}$/.test(empData.aadhaar)) {\n            newErrors.aadhaar = \"Aadhaar must be a 12-digit number\";\n            isValid = false;\n        }\n\n        if (empData.salary <= 0 || isNaN(empData.salary)) {\n            newErrors.salary = \"Salary must be a positive number\";\n            isValid = false;\n        }\n\n        setErrors(newErrors);\n        return isValid;\n    };\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        if (validateForm()) {\n            axios.post(backendUrl, empData)\n                .then((resp) => {\n                    alert(`${resp.data.firstName} with id ${resp.data.id} added successfully!`);\n                    setEmpData({ firstName: '', email: '', aadhaar: '', salary: '' });\n                })\n                .catch(error => {\n                    console.error(\"Error adding employee:\", error);\n                });\n        }\n    };\n\n    return (\n        <>\n            {/* <h1>Add Employee Component</h1>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"firstName\">First Name:</label>\n                <input type=\"text\" id=\"firstName\" name=\"firstName\" value={empData.firstName} onChange={handleChange} placeholder=\"Enter first name\" required autoFocus />\n                {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\n                <br />\n                <label htmlFor=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" value={empData.email} onChange={handleChange} placeholder=\"Enter email\" />\n                {errors.email && <span className=\"error\">{errors.email}</span>}\n                <br />\n                <label htmlFor=\"aadhaar\">Aadhaar:</label>\n                <input type=\"number\" id=\"aadhaar\" name=\"aadhaar\" value={empData.aadhaar} onChange={handleChange} placeholder=\"Enter aadhaar\" />\n                {errors.aadhaar && <span className=\"error\">{errors.aadhaar}</span>}\n                <br />\n                <label htmlFor=\"salary\">Salary:</label>\n                <input type=\"number\" id=\"salary\" name=\"salary\" value={empData.salary} onChange={handleChange} placeholder=\"Enter salary\" />\n                {errors.salary && <span className=\"error\">{errors.salary}</span>}\n                <br />\n                <input type=\"submit\" value=\"Add Employee\" />\n            </form> */}\n        </>\n    );\n};\n\nexport default AddEmployee;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
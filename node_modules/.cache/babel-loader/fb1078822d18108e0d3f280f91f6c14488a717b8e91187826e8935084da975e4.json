{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconsole.log('cartSlice');\nconst initialState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    // more methods \n\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        state.items.push({\n          ...newItem,\n          quantity: 1\n        });\n      }\n      state.totalQuantity++;\n    },\n    updateQuantity(state, action) {\n      const {\n        id,\n        quantity\n      } = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        existingItem.quantity = quantity;\n        state.totalQuantity = state.items.reduce((total, item) => total + item.quantity, 0);\n      }\n    }\n  }\n});\nexport default cartSlice.reducer;\nexport const {\n  cartObj,\n  setAllCart,\n  addItem,\n  updateQuantity\n} = cartSlice.actions;","map":{"version":3,"names":["createSlice","console","log","initialState","items","totalQuantity","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","quantity","push","updateQuantity","reduce","total","reducer","cartObj","setAllCart","actions"],"sources":["C:/Varshini/OrderManagement/Frontend/order-managemnet/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconsole.log('cartSlice');\r\n\r\nconst initialState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState : { \r\n        items: [],\r\n        totalQuantity: 0,\r\n      \r\n    },\r\n    reducers : { // more methods \r\n       \r\n        addItem(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item =>item.id === newItem.id);\r\n            if (existingItem) {\r\n              existingItem.quantity++;\r\n            } else {\r\n              state.items.push({ ...newItem, quantity: 1 });\r\n            }\r\n            state.totalQuantity++;\r\n          },\r\n          updateQuantity(state, action) {\r\n            const { id, quantity } = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            if (existingItem) {\r\n              existingItem.quantity = quantity;\r\n              state.totalQuantity = state.items.reduce((total, item) =>total + item.quantity, 0);\r\n            }\r\n          },\r\n      \r\n    }\r\n});\r\nexport default cartSlice.reducer;\r\n\r\nexport const {cartObj,setAllCart,addItem,updateQuantity} = cartSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9CC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;AAExB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZJ,YAAY,EAAG;IACXC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EAEnB,CAAC;EACDG,QAAQ,EAAG;IAAE;;IAETC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACN,KAAK,CAACW,IAAI,CAACC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACpE,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,EAAE;MACzB,CAAC,MAAM;QACLR,KAAK,CAACN,KAAK,CAACe,IAAI,CAAC;UAAE,GAAGP,OAAO;UAAEM,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC/C;MACAR,KAAK,CAACL,aAAa,EAAE;IACvB,CAAC;IACDe,cAAcA,CAACV,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAM;QAAEM,EAAE;QAAEC;MAAS,CAAC,GAAGP,MAAM,CAACE,OAAO;MACvC,MAAMC,YAAY,GAAGJ,KAAK,CAACN,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,GAAGA,QAAQ;QAChCR,KAAK,CAACL,aAAa,GAAGK,KAAK,CAACN,KAAK,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEN,IAAI,KAAIM,KAAK,GAAGN,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;MACpF;IACF;EAEN;AACJ,CAAC,CAAC;AACF,eAAeZ,SAAS,CAACiB,OAAO;AAEhC,OAAO,MAAM;EAACC,OAAO;EAACC,UAAU;EAAChB,OAAO;EAACW;AAAc,CAAC,GAAGd,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}